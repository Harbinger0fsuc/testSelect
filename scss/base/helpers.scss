/// * Helper class to reset some basic list styles
%listreset {
	padding: 0;
	margin: 0;
	list-style: none;
}

/// * Helper class implement clearfix for floated elements
%clearfix {
	&::after {
		display: block;
		clear: both;
		content: "";
	}
}

/// * Helper class to add a basic transition
%transition {
	transition: all 0.3s ease-in-out;
}

/// * Helper class to truncate and add ellipsis to a string too long for it to fit
/// * on a single line.
/// * 1. Prevent content from wrapping, forcing it on a single line.
/// * 2. Add ellipsis at the end of the line.
%ellipsis {
	overflow: hidden;
	text-overflow: ellipsis; /* 2 */
	white-space: nowrap; /* 1 */
}

/// * Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.
///
/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement
%hide-text {
	overflow: hidden;
	text-indent: 101%;
	white-space: nowrap;
}

/// * Helper class to reset default button styles
.btn-reset {
	padding: 0;
	font-family: inherit;
	color: inherit;
	background: none;
	border: 0;
	outline: none;
}

/// * Helper class to hide an element visually
.visually-hidden {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	overflow: hidden;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
	border: 0 !important;
}

/// * Helper class for a rounded element
.rounded {
	border-radius: var(--radius);
}

/// * Helper class for a circular element
.circular {
	border-radius: 50%;
}

/// * Helper class center text
.text-center {
	text-align: center;
}

/// * Margin helpers
.mx-auto {
	margin-right: auto;
	margin-left: auto;
}

.my-auto {
	margin-top: auto;
	margin-bottom: auto;
}

.mt-auto {
	margin-top: auto;
}

.mb-auto {
	margin-bottom: auto;
}

.ml-auto {
	margin-left: auto;
}

.mr-auto {
	margin-right: auto;
}

/// * Helper classes for text
.text {
	&.upper {
		text-transform: uppercase;
	}

	&.center {
		text-align: center;
	}

	&.right {
		text-align: right;
	}

	&.wht {
		color: color("white");

		@include h {
			color: inherit;
		}
	}

	&.blk {
		color: color("black");

		@include h {
			color: inherit;
		}
	}

	// weight
	$weight: (300, 400, 500, 600, 700);

	@each $value in $weight {
		&._w-#{$value} {
			font-weight: $value;
		}
	}

	// sizes
	$p: map-get($paragraph, "default");

	@each $name, $value in $p {
		@if ($name != "default") {
			&._#{$name} {
				font-size: var(--p-#{$name}) !important;
			}
		}
	}
}

/// * Helper classes for display properties
.desktop-hidden {
	display: none !important;

	@include media("<=tablet") {
		display: block !important;
	}
}

.desktop-visible {
	display: none !important;

	@include media(">=tablet") {
		display: block !important;
	}
}

.mobile-hidden {
	display: none !important;

	@include media(">tablet") {
		display: block !important;
	}
}

.mobile-visible {
	display: none !important;

	@include media("<tablet") {
		display: block !important;
	}
}

.d-none {
	display: none !important;
}
